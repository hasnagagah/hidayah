how do you manage design good database schema ?

Step 1: Define the Purpose of the Database (Requirement Analysis).
Step 2: Gather Data, Organize in tables and Specify the Primary Keys.
Step 3: Create Relationships among Tables.
Step 4: Refine & Normalize the Design.



simple database schema design

CREATE TABLE bookstore.genres 
( id SERIAL PRIMARY KEY,
"name" varchar(255) NOT NULL UNIQUE,
"description" varchar(255) NOT NULL );

CREATE TABLE bookstore.authors 
( id SERIAL PRIMARY KEY,
 "name" varchar(255) NOT NULL,
 "bio" varchar(500) NOT NULL );

CREATE TABLE bookstore.books
( id SERIAL PRIMARY KEY,
title varchar(255) NOT NULL,
description varchar(255) NOT NULL,
ISBN char(13) NOT NULL,
genre_id INT NOT NULL,
CONSTRAINT fk_genre
FOREIGN KEY(genre_id)
REFERENCES bookstore.genres(id) );

CREATE TABLE bookstore.books_authors
( book_id  int REFERENCES bookstore.books (id),
  author_id int REFERENCES bookstore.authors (id),
  is_main_author BOOLEAN NOT NULL DEFAULT false,
  CONSTRAINT bill_product_pkey PRIMARY KEY (book_id, author_id) );




Table vs View

1.	A table is used to organize data in the form of rows and columns and displayed them in a structured format. It makes the stored information more understandable to the human.

Views are treated as a virtual/logical table used to view or manipulate parts of the table. It is a database object that contains rows and columns the same as real tables.

2.	Table is a physical entity that means data is actually stored in the table.

The view is a virtual entity, which means data is not actually stored in the table.

3.	table is used to store the data. view is used to extract data from the table.

4.	table generates a fast result.

The view generates a slow result because it renders the information from the table every time we query it.

5.	table is an independent data object.

view depends on the table. Therefore we cannot create a view without using tables.

6.	Table allows us to perform DML operations.

The view will enable us to perform DML operations.

7.	table is not an easy task to replace the table directly because of its physical storage.

view is an easy task to replace the view and recreate it whenever needs.

8.	table occupies space on the systems.
view does not occupy space on the systems.




sql having do

+----+----------+-----+-----------+----------+
| ID | NAME     | AGE | ADDRESS   | SALARY   |
+----+----------+-----+-----------+----------+
|  1 | Ramesh   |  32 | Ahmedabad |  2000.00 |
|  2 | Khilan   |  25 | Delhi     |  1500.00 |
|  3 | kaushik  |  23 | Kota      |  2000.00 |
|  4 | Chaitali |  25 | Mumbai    |  6500.00 |
|  5 | Hardik   |  27 | Bhopal    |  8500.00 |
|  6 | Komal    |  22 | MP        |  4500.00 |
|  7 | Muffy    |  24 | Indore    | 10000.00 |
+----+----------+-----+-----------+----------+

SQL > SELECT ID, NAME, AGE, ADDRESS, SALARY
FROM CUSTOMERS
GROUP BY age
HAVING COUNT(age) >= 2;

+----+--------+-----+---------+---------+
| ID | NAME   | AGE | ADDRESS | SALARY  |
+----+--------+-----+---------+---------+
|  2 | Khilan |  25 | Delhi   | 1500.00 |
+----+--------+-----+---------+---------+




githubflow

1. Create a branch

2. Add commits

3. Open a Pull Request

4. Discuss and review your code

5. Deploy

6. Merge




in which case apply asynchronous between systems ?

asynchronous should only use it if you’re dealing with independent tasks. So, when you’re designing a system, the first step you need to take is to identify the dependencies between processes and define which you can execute independently and which needs to be executed as a consequence of other processes.




Agile software development values :

1. Individuals and interactions over processes and tools
2. Working software over comprehensive documentation
3. Customer collaboration over contract negotiation
4. Responding to change over following a plan






